/**
 * Klass Rich Text Editor v0.4
 * http://kseditor.com
 * 
 * Copyright 2011, Alex Tseng
 * Licensed under the MIT-style license.
 * http://kseditor.com/license
 */


/**
 * @file Smiley plugin
 */
Klass.Editor.plugins.implement('smiley', function(editor){
	editor.config.smiley.path = editor.config.smiley.path || (this.path + 'images/');
	editor.addCommand('smiley', new Klass.Editor.dialogCommand('smiley', {
		label: editor.lang.smiley.toolbar,
	}));
	//Klass.Editor.dialog.add('smiley', this.path + 'dialogs/smiley.js');
});

Klass.Editor.config.smiley = {

	/**
	 * The base path used to build the URL for the smiley images. It must end with
	 * a slash.
	 * @name Klass.Editor.config.smiley.path
	 * @type String
	 * @default <code><em>Klass.Editor.basePath</em> + 'plugins/smiley/images/'</code>
	 * @example
	 * config.smiley.path = 'http://www.example.com/images/smileys/';
	 * @example
	 * config.smiley.path = '/images/smileys/';
	 */

	/**
	 * The file names for the smileys to be displayed. These files must be
	 * contained inside the URL path defined with the
	 * {@link Klass.Editor.config.smiley.path} setting.
	 * @type Array
	 * @default (see example)
	 * @example
	 * // This is actually the default value.
	 * config.smiley.images = [
	 *     'regular_smile.gif','sad_smile.gif','wink_smile.gif','teeth_smile.gif','confused_smile.gif','tounge_smile.gif',
	 *     'embaressed_smile.gif','omg_smile.gif','whatchutalkingabout_smile.gif','angry_smile.gif','angel_smile.gif','shades_smile.gif',
	 *     'devil_smile.gif','cry_smile.gif','lightbulb.gif','thumbs_down.gif','thumbs_up.gif','heart.gif',
	 *     'broken_heart.gif','kiss.gif','envelope.gif'];
	 */
	images: [
		'regular_smile.gif', 'sad_smile.gif', 'wink_smile.gif', 'teeth_smile.gif', 'confused_smile.gif', 
		'tounge_smile.gif', 'embaressed_smile.gif', 'omg_smile.gif', 'whatchutalkingabout_smile.gif', 
		'angry_smile.gif', 'angel_smile.gif', 'shades_smile.gif', 'devil_smile.gif', 'cry_smile.gif', 
		'lightbulb.gif', 'thumbs_down.gif', 'thumbs_up.gif', 'heart.gif', 'broken_heart.gif', 
		'kiss.gif', 'envelope.gif'
	],

	/**
	 * The description to be used for each of the smileys defined in the
	 * {@link Klass.Editor.config.smiley.images} setting. Each entry in this array list
	 * must match its relative pair in the {@link Klass.Editor.config.smiley.images}
	 * setting.
	 * @type Array
	 * @default  The textual descriptions of smiley.
	 * @example
	 * // Default settings.
	 * config.smiley.descriptions =
	 *     [
	 *         'smiley', 'sad', 'wink', 'laugh', 'frown', 'cheeky', 'blush', 'surprise',
	 *         'indecision', 'angry', 'angel', 'cool', 'devil', 'crying', 'enlightened', 'no',
	 *         'yes', 'heart', 'broken heart', 'kiss', 'mail'
	 *     ];
	 * @example
	 * // Use textual emoticons as description.
	 * config.smiley.descriptions =
	 *     [
	 *         ':)', ':(', ';)', ':D', ':/', ':P', ':*)', ':-o',
	 *         ':|', '>:(', 'o:)', '8-)', '>:-)', ';(', '', '', '',
	 *         '', '', ':-*', ''
	 *     ];
	 */
	descriptions: [
		'smiley', 'sad', 'wink', 'laugh', 'frown', 'cheeky', 'blush', 'surprise', 
		'indecision', 'angry', 'angel', 'cool', 'devil', 'crying', 'enlightened', 
		'no', 'yes', 'heart', 'broken heart', 'kiss', 'mail'
	]

	/**
	 * The number of columns to be generated by the smilies matrix.
	 * @name Klass.Editor.config.smiley.columns
	 * @type Number
	 * @default 8
	 * @example
	 * config.smiley.columns = 6;
	 */

};